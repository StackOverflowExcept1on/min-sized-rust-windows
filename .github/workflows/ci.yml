name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, windows-2016]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}

      - name: Setup cargo toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Build cargo
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release

      - name: Test execution
        run: |
          $target = Get-Location
          $job = Start-Job -ScriptBlock { 
              param ($target)
              & "${target}\target\release\min-sized-rust-windows.exe" 
          } -ArgumentList $target

          $state = Wait-Job $job -Timeout 10
          $out = Receive-Job $job

          if ($out -ne "Hello World!") {
              Throw "Output did not equal ``Hello World!``, got ``$out``."
          }

      - name: Get size
        run: (Get-Item ".\target\release\min-sized-rust-windows.exe").Length
